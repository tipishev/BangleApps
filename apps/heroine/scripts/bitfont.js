// autogenerated with generate_bitfont.py at 2023-01-22 01:13:11.252211

// TODO pack into a binary string for performance

const bg_font = E.toString([
0xff, 0x83, 0x83, 0xae, 0x83, 0x83, 0xff, // A
0xff, 0x83, 0x83, 0xab, 0x83, 0x93, 0xff, // B
0xff, 0x83, 0x83, 0xbb, 0xbb, 0xbb, 0xef, // C
0xff, 0x83, 0x83, 0xbb, 0x83, 0xc7, 0x7e, // D
0xff, 0x83, 0x83, 0xab, 0xab, 0xbb, 0xef, // E
0xff, 0x83, 0x83, 0xaf, 0xac, 0xbc, 0xf0, // F
0xff, 0x83, 0x83, 0xbb, 0xb3, 0xb3, 0xff, // G
0xff, 0x83, 0x83, 0xee, 0x83, 0x83, 0xff, // H
0xff, 0x83, 0x83, 0xff, // I
0x1f, 0x13, 0x13, 0xfb, 0x83, 0x83, 0xff, // J
0xff, 0x83, 0x83, 0xef, 0x83, 0x93, 0xff, // K
0xff, 0x83, 0x83, 0xfb, 0xb, 0xb, 0xf, // L
0xff, 0x83, 0x83, 0xcf, 0x66, 0xcf, 0x83, 0x83, 0xff, // M
0xff, 0x83, 0x83, 0xce, 0xe7, 0x83, 0x83, 0xff, // N
0xff, 0x83, 0x83, 0xbb, 0x83, 0x83, 0xff, // O
0xff, 0x83, 0x83, 0xaf, 0x8c, 0x8c, 0xfc, // P
0xff, 0x83, 0x83, 0xbb, 0x83, 0x83, 0xfb, 0xf, // Q
0xff, 0x83, 0x83, 0xae, 0x83, 0x93, 0xff, // R
0xff, 0x8b, 0x8b, 0xab, 0xa3, 0xa3, 0xff, // S
0xf0, 0xb0, 0xbf, 0x83, 0x83, 0xbf, 0xb0, 0xf0, // T
0xff, 0x83, 0x83, 0xfb, 0x83, 0x83, 0xff, // U
0xfc, 0x8e, 0x87, 0xf3, 0x87, 0x8e, 0xfc, // V
0xff, 0x83, 0x83, 0xe7, 0x4e, 0xe7, 0x83, 0x83, 0xff, // W
0xff, 0x93, 0x83, 0xee, 0x83, 0x93, 0xff, // X
0xf8, 0x9c, 0x8f, 0xe3, 0xe3, 0x8f, 0x9c, 0xf8, // Y
0xff, 0xa3, 0xa3, 0xab, 0x8b, 0x8b, 0xff, // Z

]);

const fg_font = E.toString([
0x0, 0x7c, 0x7c, 0x50, 0x7c, 0x7c, 0x0, // A
0x0, 0x7c, 0x7c, 0x54, 0x7c, 0x6c, 0x0, // B
0x0, 0x7c, 0x7c, 0x44, 0x44, 0x44, 0x0, // C
0x0, 0x7c, 0x7c, 0x44, 0x7c, 0x38, 0x0, // D
0x0, 0x7c, 0x7c, 0x54, 0x54, 0x44, 0x0, // E
0x0, 0x7c, 0x7c, 0x50, 0x50, 0x40, 0x0, // F
0x0, 0x7c, 0x7c, 0x44, 0x4c, 0x4c, 0x0, // G
0x0, 0x7c, 0x7c, 0x10, 0x7c, 0x7c, 0x0, // H
0x0, 0x7c, 0x7c, 0x0, // I
0x0, 0xc, 0xc, 0x4, 0x7c, 0x7c, 0x0, // J
0x0, 0x7c, 0x7c, 0x10, 0x7c, 0x6c, 0x0, // K
0x0, 0x7c, 0x7c, 0x4, 0x4, 0x4, 0x0, // L
0x0, 0x7c, 0x7c, 0x30, 0x18, 0x30, 0x7c, 0x7c, 0x0, // M
0x0, 0x7c, 0x7c, 0x30, 0x18, 0x7c, 0x7c, 0x0, // N
0x0, 0x7c, 0x7c, 0x44, 0x7c, 0x7c, 0x0, // O
0x0, 0x7c, 0x7c, 0x50, 0x70, 0x70, 0x0, // P
0x0, 0x7c, 0x7c, 0x44, 0x7c, 0x7c, 0x4, 0x0, // Q
0x0, 0x7c, 0x7c, 0x50, 0x7c, 0x6c, 0x0, // R
0x0, 0x74, 0x74, 0x54, 0x5c, 0x5c, 0x0, // S
0x0, 0x40, 0x40, 0x7c, 0x7c, 0x40, 0x40, 0x0, // T
0x0, 0x7c, 0x7c, 0x4, 0x7c, 0x7c, 0x0, // U
0x0, 0x70, 0x78, 0xc, 0x78, 0x70, 0x0, // V
0x0, 0x7c, 0x7c, 0x18, 0x30, 0x18, 0x7c, 0x7c, 0x0, // W
0x0, 0x6c, 0x7c, 0x10, 0x7c, 0x6c, 0x0, // X
0x0, 0x60, 0x70, 0x1c, 0x1c, 0x70, 0x60, 0x0, // Y
0x0, 0x5c, 0x5c, 0x54, 0x74, 0x74, 0x0, // Z

]);

const widths = E.toString([7,7,7,7,7,7,7,7,4,7,7,7,9,8,7,7,8,7,7,8,7,7,9,7,8,7,]);

// TODO add justify aka g.setFontAlign
const SCALE = 2;
render = function(text, x, y) {
  text = text.toUpperCase();
  print(`rendering ${text}`);

  for (let i = 0; i < text.length; i++) {
    char = text[i];

  g.setFontCustom(bg_font, 65, widths, 8|(SCALE<<8))
    .setColor(0,0,0)
    .drawString(char, x, y)
    .setFontCustom(fg_font, 65, widths, 8|(SCALE<<8))
    .setColor(1,1,1)
    .drawString(char, x, y);
    // for a nice 1 pixel border between letters
    x += (g.stringWidth(char) - SCALE);
  }
};

// showtime!
g.clear();
render("CABBA", 20, 20);
